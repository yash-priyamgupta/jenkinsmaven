<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Python wheels, AI/ML, and ABI compatibility</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/jNKS1uUPOrA/" /><category term="ABI" scheme="searchisko:content:tags" /><category term="AI/ML" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gcc" scheme="searchisko:content:tags" /><category term="machine learning" scheme="searchisko:content:tags" /><category term="Python" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="Universal Base Images (UBI)" scheme="searchisko:content:tags" /><author><name>Subin Modeel</name></author><id>searchisko:content:id:jbossorg_blog-python_wheels_ai_ml_and_abi_compatibility</id><updated>2019-09-27T07:00:06Z</updated><published>2019-09-27T07:00:06Z</published><content type="html">&lt;p&gt;&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; has become a popular programming language in the AI/ML world. Projects like &lt;a href="https://www.tensorflow.org/"&gt;TensorFlow&lt;/a&gt; and &lt;a href="https://pytorch.org/"&gt;PyTorch&lt;/a&gt; have Python bindings as the primary interface used by data scientists to write machine learning code. However, distributing AI/ML-related Python packages and ensuring application binary interface (ABI) compatibility between various Python packages and system libraries presents a unique set of challenges.&lt;/p&gt; &lt;p&gt;The manylinux standard (e.g., &lt;a href="https://www.python.org/dev/peps/pep-0599/"&gt;manylinux2014&lt;/a&gt;) for &lt;a href="https://opensource.com/article/19/2/manylinux-python-wheels"&gt;Python wheels&lt;/a&gt; provides a practical solution to these challenges, but it also introduces new challenges that the Python community and developers need to consider. Before we delve into these additional challenges, we&amp;#8217;ll briefly look at the Python ecosystem for packaging and distribution.&lt;br /&gt; &lt;span id="more-629677"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Wheels, AI/ML,  and ABIs&lt;/h2&gt; &lt;p&gt;Python packages are installed using the &lt;code&gt;pip&lt;/code&gt; command, which downloads the package from pypi.org.&lt;/p&gt; &lt;pre&gt;pip install &amp;#60;package-name&amp;#62;&lt;/pre&gt; &lt;p&gt;These packages can be of two types:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Pure Python wheels, which may or may not be targeted to a specific Python version&lt;/li&gt; &lt;li&gt;Extension wheels, which use native code written in C/C++&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;All AI/ML Python packages are extension wheels that use native operating system libraries. Compiled Python extension modules built on one distribution may not work on other distributions, or even on different machines running the same distribution with different system libraries installed. This is because the compiled binaries have a record of the ABI they rely on, such as relocations, symbols and versions, size of global data symbols, etc. At runtime, if the ABI does not match, the loader may raise an error. An example of a missing symbol with a version would look like this:&lt;/p&gt; &lt;pre&gt;/lib64/libfoo.so.1: version `FOO_1.2' not found (required by ./app)&lt;/pre&gt; &lt;p&gt;AI/ML project maintainers need to build different Python packages for Windows, macOS X, and Linux distributions. The precompiled binaries are packaged in a &lt;a href="https://www.python.org/dev/peps/pep-0427/"&gt;&lt;em&gt;wheel &lt;/em&gt;&lt;/a&gt;format with the &lt;code&gt;.whl&lt;/code&gt; file extension. A wheel is a zip file that can be interpreted as a Python library.&lt;/p&gt; &lt;p&gt;The file name contains specific tags, which are used by the &lt;code&gt;pip&lt;/code&gt; command to determine the Python version and operating system that match the system on which the AI/ML library is installed. The wheel also contains the layout of a Python project as it should be installed on the system. To avoid the need for users to compile these packages the project maintainers build and upload platform-specific wheels for Windows, macOS, and Linux on pypi.org.&lt;/p&gt; &lt;p&gt;Here are some examples of wheels for Linux and non-Linux distros:&lt;/p&gt; &lt;pre&gt;tensorflow-2.0.0-cp27-cp27m-macosx_10_11_x86_64.whl tensorflow-2.0.0-cp35-cp35m-win_amd64.whl tensorflow-2.0.0-cp36-cp36m-manylinux1_x86_64.whl tensorflow-2.0.0-cp37-cp37m-manylinux2010_x86_64.whl&lt;/pre&gt; &lt;h2&gt;Manylinux2014&lt;/h2&gt; &lt;p&gt;AI/ML project maintainers who want to distribute the Python library with native code for Linux distros have the difficult task of ensuring ABI compatibility. The compiled code needs to run on a wide variety of Linux distributions.&lt;/p&gt; &lt;p&gt;Fortunately, there is a way to make a binary compatible with most (though not all) Linux distributions.  To do this, you need to build a binary and use an ABI baseline that is older than any distribution you want to support. The expectation is that the newer distributions will keep the ABI guarantees; that way, you&amp;#8217;ll be able to run your binary on newer distributions as long as they provide the ABI baseline. Eventually, the ABI baselines will change in an incompatible way, and that may be a technical requirement for moving the baseline forward. There are other non-technical requirements for moving the ABI baseline forward, and they revolve around distribution lifecycles.&lt;/p&gt; &lt;p&gt;The &lt;a href="https://www.python.org/dev/peps/pep-0513"&gt;manylinux&lt;/a&gt; platform tag is a way to make your Python libraries that are compatible with most Linux distributions. Python&amp;#8217;s manylinux defines an ABI baseline and targets the baseline by building on an old version of a distribution. To achieve maximum compatibility, it uses the longest-supported freely distributable version of Linux: &lt;a href="https://www.centos.org/"&gt;CentOS&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The first manylinux platform tag called &lt;a href="https://www.python.org/dev/peps/pep-0513"&gt;manylinux1&lt;/a&gt; uses CentOS 5. The second iteration called &lt;a href="https://www.python.org/dev/peps/pep-0571/"&gt;manylinux2010&lt;/a&gt; uses CentOS 6. The latest specification &lt;a href="https://www.python.org/dev/peps/pep-0599/"&gt;manylinux2014&lt;/a&gt; is a result of Red Hat, other vendors, and the Python community moving the manylinux specification ahead to use &lt;a href="https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image"&gt;CentOS 7/UBI 7&lt;/a&gt; and support more architectures.&lt;/p&gt; &lt;p&gt;To make the life of AI/ML Python project maintainers easier, the Python community provides a prebuilt manylinux build container, which can be used to build project wheels, listed here:&lt;/p&gt; &lt;pre&gt;centos5 Image - quay.io/pypa/manylinux1_x86_64 centos6 Image - quay.io/pypa/manylinux2010_x86_64 ubi7 Image - quay.io/pypa/manylinux2014_x86_64(coming soon)&lt;/pre&gt; &lt;p&gt;For AI/ML Python project users the &lt;code&gt;pip&lt;/code&gt; command is very important. The &lt;code&gt;pip&lt;/code&gt; command will install the appropriate wheel file based on wheel tags and also based on the manylinux platform tag of the wheel which matches the system. For example, a manylinux2014 wheel will not install on Red Hat Enterprise Linux (RHEL) 6 because it doesn’t have the system library versions specified in the manylinux2014 specification. Pip will install manylinux2010 wheels on RHEL 6 and manylinux2014 wheels on RHEL 7.&lt;/p&gt; &lt;p&gt;AI/ML Python project users have to ensure they update &lt;code&gt;pip&lt;/code&gt; command regularly before they update to the next AI/ML Python project version. If users are using containers, then the latest &lt;code&gt;pip&lt;/code&gt; command should be available in the container.&lt;/p&gt; &lt;h2&gt;Additional challenges&lt;/h2&gt; &lt;p&gt;Although the manylinux standard has helped deliver reliable and stable extension wheels, it does introduce two additional challenges:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;b&gt;Lifecycle&lt;/b&gt;&lt;br /&gt; At some point, the reference platforms for the ABI baselines will have end-of-life. The Python community must actively track the end-of-life support and CVEs for different system libraries used by the project and potentially move project maintainers to the next available manylinux platform tag. &lt;strong&gt;Note:&lt;/strong&gt; The EOL for CentOS 6 is November 30, 2020. The EOL for CentOS 7 is June 30, 2024.&lt;br /&gt; Lastly, project maintainers should ensure that they build wheels for all the manylinux platform tags or at least the wheels of the most recent specifications. This will give users the most options for installation.&lt;/li&gt; &lt;li&gt;&lt;b&gt;Hardware vendor support&lt;/b&gt;&lt;br /&gt; Almost all AI/ML Python projects have some form of hardware accelerator support, such as CUDA (NVIDIA), ROCm (AMD), Intel MKL. The hardware vendors might not support all versions of the toolchain and project maintainers should pick a baseline toolchain (gcc, binutils, glibc) and set their wheels to a certain manylinux platform tags that match. Some projects might need to support a variety of architectures including Intel/AMD (i686, x86_64), Arm (aarch64, armhfp), IBM POWER (ppc64, ppc64le), or IBM Z Series (s390x). Regression tests on different architectures are essential to catch compatibility issues. See the Red Hat Enterprise Linux ABI compatibility guides for &lt;a href="https://access.redhat.com/articles/rhel-abi-compatibility"&gt;RHEL 7&lt;/a&gt; and &lt;a href="https://access.redhat.com/articles/rhel8-abi-compatibility"&gt;RHEL 8&lt;/a&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;Solutions&lt;/h3&gt; &lt;p&gt;The Python community must follow the lifecycle of the reference software that is used to target the ABI baselines and plan accordingly. Python developers must carefully match system tooling or developer tooling to the hardware vendor software requirements. Solving both of these is a difficult but ultimately rewarding challenge.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#38;linkname=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F27%2Fpython-wheels-ai-ml-and-abi-compatibility%2F&amp;#038;title=Python%20wheels%2C%20AI%2FML%2C%20and%20ABI%20compatibility" data-a2a-url="https://developers.redhat.com/blog/2019/09/27/python-wheels-ai-ml-and-abi-compatibility/" data-a2a-title="Python wheels, AI/ML, and ABI compatibility"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/27/python-wheels-ai-ml-and-abi-compatibility/"&gt;Python wheels, AI/ML, and ABI compatibility&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/jNKS1uUPOrA" height="1" width="1" alt=""/&gt;</content><summary>Python has become a popular programming language in the AI/ML world. Projects like TensorFlow and PyTorch have Python bindings as the primary interface used by data scientists to write machine learning code. However, distributing AI/ML-related Python packages and ensuring application binary interface (ABI) compatibility between various Python packages and system libraries presents a unique set of ...</summary><dc:creator>Subin Modeel</dc:creator><dc:date>2019-09-27T07:00:06Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/27/python-wheels-ai-ml-and-abi-compatibility/</feedburner:origLink></entry><entry><title>DevNation Live Bengaluru: Dreaming of streaming with reactive programming</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uZT6iMEcMC0/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Cloud Native" scheme="searchisko:content:tags" /><category term="devnation" scheme="searchisko:content:tags" /><category term="DevNation Live" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="reactive programming" scheme="searchisko:content:tags" /><author><name>Editorial Team</name></author><id>searchisko:content:id:jbossorg_blog-devnation_live_bengaluru_dreaming_of_streaming_with_reactive_programming</id><updated>2019-09-26T07:00:13Z</updated><published>2019-09-26T07:00:13Z</published><content type="html">&lt;p&gt;Our first &lt;a href="https://developers.redhat.com/devnationlive-india/"&gt;DevNation Live regional event was held in Bengaluru, India&lt;/a&gt; in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists.&lt;/p&gt; &lt;p&gt;In this tutorial, presented by &lt;a href="https://developers.redhat.com/blog/author/yanaga/"&gt;Edson Yanaga&lt;/a&gt;, you&amp;#8217;ll learn about &lt;a href="https://developers.redhat.com/videos/youtube/FgqbSNdR2AQ/"&gt;reactive programming&lt;/a&gt; and why it matters in this new cloud-native era. We’ll use live coding demos to explain how to be reactive and benefit from this brave new streaming world.&lt;span id="more-623687"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Watch the complete presentation:&lt;/p&gt; &lt;p&gt;&lt;iframe src="https://www.youtube.com/embed/NzxjGuIGKHg" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://speakerdeck.com/yanaga/dreaming-of-streaming-with-reactive-programming"&gt;See the slides here&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Join us at an upcoming&lt;/span&gt;&lt;a href="https://developers.redhat.com/events/"&gt; &lt;span style="font-weight: 400;"&gt;developer event&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, and see our collection of&lt;/span&gt;&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; &lt;span style="font-weight: 400;"&gt;past DevNation Live tech talks&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F26%2Fdevnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming%2F&amp;#038;title=DevNation%20Live%20Bengaluru%3A%20Dreaming%20of%20streaming%20with%20reactive%20programming" data-a2a-url="https://developers.redhat.com/blog/2019/09/26/devnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming/" data-a2a-title="DevNation Live Bengaluru: Dreaming of streaming with reactive programming"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/26/devnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming/"&gt;DevNation Live Bengaluru: Dreaming of streaming with reactive programming&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uZT6iMEcMC0" height="1" width="1" alt=""/&gt;</content><summary>Our first DevNation Live regional event was held in Bengaluru, India in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists. In this tutorial, presented by Edson Yanaga, you’ll learn about reactive programming and why it matters in this new cloud-native era. We’ll use live coding demos to explain how to be reactive and benefit...</summary><dc:creator>Editorial Team</dc:creator><dc:date>2019-09-26T07:00:13Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/26/devnation-live-bengaluru-dreaming-of-streaming-with-reactive-programming/</feedburner:origLink></entry><entry><title>4 steps to set up the MQTT secure client for Red Hat AMQ 7.4 on OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lXCB6I8oo_s/" /><category term="AMQ" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="messaging" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Red Hat AMQ" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Application Runtimes" scheme="searchisko:content:tags" /><author><name>Chandra Shekhar Pandey</name></author><id>searchisko:content:id:jbossorg_blog-4_steps_to_set_up_the_mqtt_secure_client_for_red_hat_amq_7_4_on_openshift</id><updated>2019-09-25T07:00:17Z</updated><published>2019-09-25T07:00:17Z</published><content type="html">&lt;p class="selectionShareable"&gt;In this article, we show how to set up &lt;a href="https://developers.redhat.com/products/amq/overview"&gt;Red Hat AMQ 7.4&lt;/a&gt; on &lt;a href="http://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;. Also, we show how to connect the external &lt;a href="http://mqtt.org" target="_blank" rel="noopener noreferrer"&gt;Message Queuing Telemetry Transport (MQTT) secure client&lt;/a&gt; to the AMQ 7.4 platform. MQTT is a Java-based client that uses the &lt;a href="https://www.eclipse.org/paho/" target="_blank" rel="noopener noreferrer"&gt;Eclipse Paho&lt;/a&gt; library and can publish and consume messages from Red Hat AMQ 7.4 Broker on OpenShift using secure transport. These commands and code have been verified with OpenShift 3.11.&lt;span id="more-628557"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Follow the steps below to perform this activity.&lt;/p&gt; &lt;h2&gt;Step 1: Create a secret and a service account&lt;/h2&gt; &lt;p&gt;In a new OpenShift project, create a secret and a service account with the view role:&lt;/p&gt; &lt;pre&gt;[cpandey@cpandey AMQ74_CERTIFICATE]$ oc new-project amq-demo [cpandey@cpandey AMQ74_CERTIFICATE]$ echo '{"kind": "ServiceAccount", "apiVersion": "v1", "metadata": {"name": "amq-service-account"}}' | oc create -f - [cpandey@cpandey AMQ74_CERTIFICATE]$ oc policy add-role-to-user view system:serviceaccount:amq-demo:amq-service-account [cpandey@cpandey AMQ74_CERTIFICATE]$ keytool -genkey -alias broker -keyalg RSA -keystore broker.ks [cpandey@cpandey AMQ74_CERTIFICATE]$ keytool -export -alias broker -keystore broker.ks -file broker_cert [cpandey@cpandey AMQ74_CERTIFICATE]$ keytool -genkey -alias client -keyalg RSA -keystore client.ks [cpandey@cpandey AMQ74_CERTIFICATE]$ keytool -import -alias broker -keystore client.ts -file broker_cert [cpandey@cpandey AMQ74_CERTIFICATE]$ oc create secret generic amq-app-secret --from-file=broker.ks [cpandey@cpandey AMQ74_CERTIFICATE]$ oc secrets add sa/amq-service-account secret/amq-app-secret &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; All of these steps are mentioned in the official &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq/7.4/html/deploying_amq_broker_on_openshift_container_platform/install-deploy-broker-ocp" target="_blank" rel="noopener noreferrer"&gt;Red Hat Documentation&lt;/a&gt;, with details.&lt;/p&gt; &lt;h2&gt;Step 2: Deploy Red Hat AMQ 7.4 Broker&lt;/h2&gt; &lt;p&gt;Deploy Red Hat AMQ 7.4 broker using the OpenShift web console:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Broker setup is easy with the OpenShift GUI. In the &lt;em&gt;amq-demo &lt;/em&gt;project, browse the catalog and search for the template &lt;em&gt;Red Hat A-MQ 7.4 (Ephemeral with SSL).&lt;/em&gt; The following six figures describe the information that you need to fill in for Broker setup. Once the configuration is complete, click the &lt;em&gt;Create&lt;/em&gt; button:&lt;/li&gt; &lt;/ol&gt; &lt;div id="attachment_628587" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628587" class="wp-image-628587 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_417-1024x409.png" alt="" width="640" height="256" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_417-1024x409.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_417-300x120.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_417-768x307.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628587" class="wp-caption-text"&gt;Figure 1: Browse the catalog.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_628577" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628577" class="wp-image-628577 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_418-1024x461.png" alt="" width="640" height="288" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_418-1024x461.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_418-300x135.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_418-768x346.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628577" class="wp-caption-text"&gt;Figure 2: Select the template.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_628597" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628597" class="wp-image-628597 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_423-1024x466.png" alt="" width="640" height="291" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_423-1024x466.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_423-300x137.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_423-768x349.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628597" class="wp-caption-text"&gt;Figure 3: Complete configuration part 1.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_628607" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628607" class="wp-image-628607 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_424-1024x456.png" alt="" width="640" height="285" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_424-1024x456.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_424-300x134.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_424-768x342.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628607" class="wp-caption-text"&gt;Figure 4: Complete configuration part 2.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_628617" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628617" class="wp-image-628617 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_425-1024x461.png" alt="" width="640" height="288" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_425-1024x461.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_425-300x135.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_425-768x346.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628617" class="wp-caption-text"&gt;Figure 5: Complete configuration part 3.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_628627" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-628627" class="wp-image-628627 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_426-1024x423.png" alt="" width="640" height="264" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_426-1024x423.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_426-300x124.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Selection_426-768x317.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-628627" class="wp-caption-text"&gt;Figure 6: Complete the final step.&lt;/p&gt;&lt;/div&gt; &lt;ol start="2"&gt; &lt;li&gt;Run the following commands to check for services and pods. After a successful setup, you should have these available:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;[cpandey@cpandey AMQ74_CERTIFICATE]$ oc get service|grep ssl brokertest-amq-amqp-ssl ClusterIP 172.30.4.207 5671/TCP 2m brokertest-amq-mqtt-ssl ClusterIP 172.30.145.232 8883/TCP 2m brokertest-amq-stomp-ssl ClusterIP 172.30.20.224 61612/TCP 2m brokertest-amq-tcp-ssl ClusterIP 172.30.160.172 61617/TCP 2m [cpandey@cpandey AMQ74_CERTIFICATE]$ [cpandey@cpandey AMQ74_CERTIFICATE]$ oc get pod NAME READY STATUS RESTARTS AGE brokertest-amq-1-z2xjq 1/1 Running 0 3m [cpandey@cpandey AMQ74_CERTIFICATE]$&lt;/pre&gt; &lt;ol start="3"&gt; &lt;li&gt;Now, create a route in the current project &lt;em&gt;(&lt;/em&gt;amq-demo) for the MQTT service &lt;em&gt;brokertest-amq-mqtt-ssl&lt;/em&gt; so that external clients can access Red Hat AMQ 7.4 in OpenShift. Set this route&amp;#8217;s termination type to &lt;em&gt;&lt;a href="https://docs.openshift.com/container-platform/3.11/architecture/networking/routes.html#passthrough-termination" target="_blank" rel="noopener noreferrer"&gt;passthrough&lt;/a&gt;&lt;/em&gt; so that the encrypted traffic goes to Red Hat AMQ 7.4 broker and TLS termination is not done at the route, specifically:&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;[cpandey@cpandey AMQ74_CERTIFICATE]$ oc create route passthrough --service brokertest-amq-mqtt-ssl route.route.openshift.io/brokertest-amq-mqtt-ssl created&lt;/pre&gt; &lt;ol start="4"&gt; &lt;li&gt;Now, if we check routes available in the current project (amq-demo):&lt;/li&gt; &lt;/ol&gt; &lt;pre&gt;[cpandey@cpandey AMQ74_CERTIFICATE]$ oc get route NAME HOST/PORT PATH SERVICES PORT TERMINATION WILDCARD brokertest-amq-mqtt-ssl brokertest-amq-mqtt-ssl-amq-demo.192.168.42.111.nip.io brokertest-amq-mqtt-ssl passthrough None console console-amq-demo.192.168.42.111.nip.io brokertest-amq-jolokia passthrough None [cpandey@cpandey AMQ74_CERTIFICATE]$ &lt;/pre&gt; &lt;h2&gt;Step 3: Set up the Java MQTT client&lt;/h2&gt; &lt;p&gt;Now, set up the Java MQTT client external to your OpenShift environment. Once the route is configured, we just have to provide that URL in our client. Check out my personal &lt;a href="https://github.com/1984shekhar/Artemis_POC/tree/master/MQTT_CLIENT/MQTT_ECLIPSEPAHO_CLIENT_SSL" target="_blank" rel="noopener noreferrer"&gt;GitHub code&lt;/a&gt; for examples:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;For the MQTT publisher client, check out &lt;a href="https://github.com/1984shekhar/Artemis_POC/blob/master/MQTT_CLIENT/MQTT_ECLIPSEPAHO_CLIENT_SSL/src/main/java/com/mycompany/mqtt/client/MqttPublishSample.java#L17" target="_blank" rel="noopener noreferrer"&gt;MqttPublishSample.java&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;For the MQTT subscriber client, check out &lt;a href="https://github.com/1984shekhar/Artemis_POC/blob/master/MQTT_CLIENT/MQTT_ECLIPSEPAHO_CLIENT_SSL/src/main/java/com/mycompany/mqtt/client/MqttSubscribeSample.java#L13" target="_blank" rel="noopener noreferrer"&gt;MqttSubscribeSample.java&lt;/a&gt; .&lt;/li&gt; &lt;li&gt;To execute these clients, use &lt;a href="https://github.com/1984shekhar/Artemis_POC/blob/master/MQTT_CLIENT/MQTT_ECLIPSEPAHO_CLIENT_SSL/src/main/java/com/mycompany/mqtt/client/ThreadFactory.java#L29" target="_blank" rel="noopener noreferrer"&gt;ThreadFactory.java&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Note that we are using the client truststore &lt;code&gt;client.ts,&lt;/code&gt; which we generated in Step 1.&lt;/p&gt; &lt;h2&gt;Step 4: Monitor topic statistics&lt;/h2&gt; &lt;p&gt;Now that you&amp;#8217;re set up, you can monitor your topic statistics:&lt;/p&gt; &lt;pre&gt;[cpandey@cpandey AMQ74_CERTIFICATE]$ oc get pods NAME READY STATUS RESTARTS AGE brokertest-amq-1-z2xjq 1/1 Running 0 14m [cpandey@cpandey AMQ74_CERTIFICATE]$ oc rsh brokertest-amq-1-z2xjq sh-4.2$ cd /opt/amq/bin sh-4.2$ ./artemis queue stat OpenJDK 64-Bit Server VM warning: If the number of processors is expected to increase from one, then you should configure the number of parallel GC threads appropriately using -XX:ParallelGCThreads=N |NAME |ADDRESS |CONSUMER_COUNT |MESSAGE_COUNT |MESSAGES_ADDED |DELIVERING_COUNT |MESSAGES_ACKED | |DLQ |DLQ |0 |0 |0 |0 |0 | |ExpiryQueue |ExpiryQueue |0 |0 |0 |0 |0 | |activemq.management.b75e216e-902d-4393-8961-4a45dc54e4b6|activemq.management.b75e216e-902d-4393-8961-4a45dc54e4b6|1 |0 |0 |0 |0 | |paho3709101254858.MQTT_paho|MQTT_paho |0 |0 |9 |0 |9 | |queue1 |queue1 |0 |0 |0 |0 |0 | sh-4.2$&lt;/pre&gt; &lt;h2&gt;Wrapping up&lt;/h2&gt; &lt;p&gt;That&amp;#8217;s it. I hope this article helps you to quickly set up Red Hat AMQ 7.4 on OpenShift, plus the external secure client using the MQTT protocol. You can also check out this &lt;a href="https://developers.redhat.com/blog/2019/03/28/red-hat-amq-6-3-on-openshift-set-up-connect-ssl-client-and-configure-logging/"&gt;developer blog&lt;/a&gt; for setting up Red Hat AMQ 6.3 on OpenShift with the Camel-based Openwire Client using SSL.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#38;linkname=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F25%2F4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift%2F&amp;#038;title=4%20steps%20to%20set%20up%20the%20MQTT%20secure%20client%20for%20Red%20Hat%20AMQ%207.4%20on%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2019/09/25/4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift/" data-a2a-title="4 steps to set up the MQTT secure client for Red Hat AMQ 7.4 on OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/25/4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift/"&gt;4 steps to set up the MQTT secure client for Red Hat AMQ 7.4 on OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lXCB6I8oo_s" height="1" width="1" alt=""/&gt;</content><summary>In this article, we show how to set up Red Hat AMQ 7.4 on Red Hat OpenShift. Also, we show how to connect the external Message Queuing Telemetry Transport (MQTT) secure client to the AMQ 7.4 platform. MQTT is a Java-based client that uses the Eclipse Paho library and can publish and consume messages from Red Hat AMQ 7.4 Broker on OpenShift using secure transport. These commands and code have been ...</summary><dc:creator>Chandra Shekhar Pandey</dc:creator><dc:date>2019-09-25T07:00:17Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/25/4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift/</feedburner:origLink></entry><entry><title>test (ignore)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zv2sZtWZ3dM/test-ignore.html" /><category term="feed_group_name_drools" scheme="searchisko:content:tags" /><category term="feed_name_drools" scheme="searchisko:content:tags" /><author><name>Mark Proctor</name></author><id>searchisko:content:id:jbossorg_blog-test_ignore</id><updated>2019-09-24T15:55:57Z</updated><published>2019-09-24T15:55:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;test (ignore)&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=WijDlA0b5BI:4yvM_Fsl8Lc:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:dnMXMwOfBR0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=dnMXMwOfBR0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=WijDlA0b5BI:4yvM_Fsl8Lc:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=WijDlA0b5BI:4yvM_Fsl8Lc:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=WijDlA0b5BI:4yvM_Fsl8Lc:jWeZv7XsJd0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=jWeZv7XsJd0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/DroolsAtom/~4/WijDlA0b5BI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zv2sZtWZ3dM" height="1" width="1" alt=""/&gt;</content><summary>test (ignore)</summary><dc:creator>Mark Proctor</dc:creator><dc:date>2019-09-24T15:55:00Z</dc:date><feedburner:origLink>http://feeds.athico.com/~r/DroolsAtom/~3/WijDlA0b5BI/test-ignore.html</feedburner:origLink></entry><entry><title>Changes to CentOS: What CentOS Stream means for developers</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/r1d-ZdimQj0/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="CentOS" scheme="searchisko:content:tags" /><category term="CentOS Stream" scheme="searchisko:content:tags" /><category term="community" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="linux" scheme="searchisko:content:tags" /><category term="Operating System" scheme="searchisko:content:tags" /><category term="RHEL8" scheme="searchisko:content:tags" /><author><name>Bob Davis</name></author><id>searchisko:content:id:jbossorg_blog-changes_to_centos_what_centos_stream_means_for_developers</id><updated>2019-09-24T15:31:03Z</updated><published>2019-09-24T15:31:03Z</published><content type="html">&lt;p&gt;Today &lt;a href="https://www.redhat.com/en/about/company/management/chris-wright"&gt;Chris Wright&lt;/a&gt;, vice president and CTO at Red Hat, published &lt;a href="http://redhat.com/en/blog/transforming-development-experience-within-centos"&gt;a post describing how CentOS is changing&lt;/a&gt; and the opportunities it opens for developers in the Red Hat Enterprise &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Linux&lt;/a&gt; (RHEL) ecosystem. The net effect of this change is that, in addition to &lt;a href="https://www.centos.org/"&gt;CentOS&lt;/a&gt; Linux 8, there is a new version of CentOS—CentOS Stream—which will provide a “rolling preview” of future Red Hat Enterprise Linux kernels and features. This is being announced in addition to the release of the traditional CentOS Linux 8, which is a downstream rebuild of the current RHEL release.&lt;/p&gt; &lt;p&gt;CentOS Stream is an exciting addition to the family of Linux operating systems that are upstream and downstream of Red Hat Enterprise Linux.&lt;/p&gt; &lt;p&gt;CentOS Stream will live in-between &lt;a href="https://getfedora.org/"&gt;Fedora&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/linux/"&gt;RHEL&lt;/a&gt;, providing a clearer vision of what the next version of RHEL will be, giving developers the opportunity to stay a step or two ahead in their planning, and making it easier to ensure next-generation applications will be compatible with future RHEL versions. CentOS Stream also will make contributing to future versions of RHEL much simpler and more direct.&lt;/p&gt; &lt;p&gt;This clearly benefits ecosystem developers writing hardware drivers or extending protocols for RHEL, and can give application developers a testbed for applications they want to deploy on future RHEL versions. We hope this will bring even more community engagement to Fedora, CentOS, and RHEL, continuing our “upstream first” policy. Fedora has always been our upstream “proving ground” where the community innovates and experiments, and that won’t change.&lt;/p&gt; &lt;p&gt;In addition to the existing releases of CentOS Linux, CentOS Stream, and Fedora, all &lt;a href="https://developers.redhat.com/?sc_cid=7013a000002CyRkAAK"&gt;Red Hat Developer&lt;/a&gt; members have access to no-cost RHEL via a &lt;a href="https://developers.redhat.com/register/?sc_cid=7013a000002CyRkAAK"&gt;no-cost subscription&lt;/a&gt;. These options should make sure that, no matter what problem you’re trying to solve, there’s a Linux distro that best suits your particular needs.&lt;/p&gt; &lt;p&gt;More information on why RHEL is a fantastic platform for application development can be found in the blog post &amp;#8220;&lt;a href="https://developers.redhat.com/blog/2019/08/21/why-you-should-be-developing-on-red-hat-enterprise-linux/"&gt;Why you should be developing on Red Hat Enterprise Linux&lt;/a&gt;.&amp;#8221;&lt;/p&gt; &lt;p&gt;For container-based applications, Universal Base Images will provide the flexibility needed to deploy across multiple Linux distributions, which should include CentOS Stream. We encourage developers building applications that will run in VMs or on bare metal to explore Red Hat Enterprise Linux for your production platform, and take advantage of the no-cost RHEL available through Red Hat Developer for your development needs.&lt;/p&gt; &lt;p&gt;We’d love to hear about how CentOS Stream will fit into your software development practices, and encourage your feedback.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#38;linkname=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fchanges-to-centos-what-centos-stream-means-for-developers%2F&amp;#038;title=Changes%20to%20CentOS%3A%20What%20CentOS%20Stream%20means%20for%20developers" data-a2a-url="https://developers.redhat.com/blog/2019/09/24/changes-to-centos-what-centos-stream-means-for-developers/" data-a2a-title="Changes to CentOS: What CentOS Stream means for developers"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/24/changes-to-centos-what-centos-stream-means-for-developers/"&gt;Changes to CentOS: What CentOS Stream means for developers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/r1d-ZdimQj0" height="1" width="1" alt=""/&gt;</content><summary>Today Chris Wright, vice president and CTO at Red Hat, published a post describing how CentOS is changing and the opportunities it opens for developers in the Red Hat Enterprise Linux (RHEL) ecosystem. The net effect of this change is that, in addition to CentOS Linux 8, there is a new version of CentOS—CentOS Stream—which will provide a “rolling preview” of future Red Hat Enterprise Linux kernels...</summary><dc:creator>Bob Davis</dc:creator><dc:date>2019-09-24T15:31:03Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/24/changes-to-centos-what-centos-stream-means-for-developers/</feedburner:origLink></entry><entry><title>DevNation Live Bengaluru: Kubernetes serverless application architecture</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/UDdzkWr-2CY/" /><category term="devnation" scheme="searchisko:content:tags" /><category term="events" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Knative" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><author><name>Editorial Team</name></author><id>searchisko:content:id:jbossorg_blog-devnation_live_bengaluru_kubernetes_serverless_application_architecture</id><updated>2019-09-24T07:00:31Z</updated><published>2019-09-24T07:00:31Z</published><content type="html">&lt;p&gt;Our first &lt;a href="https://developers.redhat.com/devnationlive-india/"&gt;DevNation Live regional event was held in Bengaluru, India&lt;/a&gt; in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists.&lt;/p&gt; &lt;p&gt;In this session, &lt;a href="https://developers.redhat.com/blog/author/burrsutter/"&gt;Burr Sutter&lt;/a&gt; discusses &lt;a href="https://developers.redhat.com/topics/serverless-architecture/"&gt;serverless architectures&lt;/a&gt;, which have become a common approach in organizations that want to be more effective in DevOps and optimize their IT resources. This approach adds further flexibility to the next generation of &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt;, and &lt;a href="https://developers.redhat.com/topics/knative/"&gt;Knative&lt;/a&gt; helps running your microservices serverless workloads on Kubernetes/OpenShift be more agile and effective.&lt;span id="more-622077"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Watch the complete presentation:&lt;br /&gt; &lt;iframe src="https://www.youtube.com/embed/sVA2EoUAQNE" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Join us at an upcoming&lt;/span&gt;&lt;a href="https://developers.redhat.com/events/"&gt; &lt;span style="font-weight: 400;"&gt;developer event&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, and see our collection of&lt;/span&gt;&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; &lt;span style="font-weight: 400;"&gt;past DevNation Live tech talks&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F24%2Fdevnation-live-bengaluru-kubernetes-serverless-application-architecture%2F&amp;#038;title=DevNation%20Live%20Bengaluru%3A%20Kubernetes%20serverless%20application%20architecture" data-a2a-url="https://developers.redhat.com/blog/2019/09/24/devnation-live-bengaluru-kubernetes-serverless-application-architecture/" data-a2a-title="DevNation Live Bengaluru: Kubernetes serverless application architecture"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/24/devnation-live-bengaluru-kubernetes-serverless-application-architecture/"&gt;DevNation Live Bengaluru: Kubernetes serverless application architecture&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/UDdzkWr-2CY" height="1" width="1" alt=""/&gt;</content><summary>Our first DevNation Live regional event was held in Bengaluru, India in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists. In this session, Burr Sutter discusses serverless architectures, which have become a common approach in organizations that want to be more effective in DevOps and optimize their IT resources. This approa...</summary><dc:creator>Editorial Team</dc:creator><dc:date>2019-09-24T07:00:31Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/24/devnation-live-bengaluru-kubernetes-serverless-application-architecture/</feedburner:origLink></entry><entry><title>How the new Quarkus extension for Visual Studio Code improves the development experience</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/hqYLp3ki0lo/" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><category term="VS Code" scheme="searchisko:content:tags" /><author><name>David Kwon</name></author><id>searchisko:content:id:jbossorg_blog-how_the_new_quarkus_extension_for_visual_studio_code_improves_the_development_experience</id><updated>2019-09-23T13:45:28Z</updated><published>2019-09-23T13:45:28Z</published><content type="html">&lt;p&gt;Earlier this year, we were introduced to &lt;a href="https://quarkus.io/"&gt;Quarkus&lt;/a&gt;, the next-generation, container-first framework for Java applications. As expected, such new frameworks and technologies make way for new developer tools focused on making the development experience even better.&lt;/p&gt; &lt;p&gt;The&lt;a href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-quarkus"&gt; recent Quarkus extension for Visual Studio Code release &lt;/a&gt;aims to do just that, by bringing features specific to Quarkus project development within VS Code. The new VS Code extension is dependent on a couple of Java extensions for VS Code, so it is recommended that you have the &lt;a href="https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack"&gt;Java Extension Pack&lt;/a&gt; installed. This article outlines what the Quarkus extension for VS Code has to offer: convenient features for an already convenient Java framework.&lt;span id="more-630077"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/redhat-developer/vscode-quarkus/blob/master/README.md"&gt;For more detailed information, check out the GitHub repository.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Watch a demo of the Quarkus extension for VS Code:&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/XMrLP_7IbW0?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3 id="1"&gt;Generating a Maven-based Quarkus project&lt;/h3&gt; &lt;p&gt;Previously, generating a Maven-based Quarkus project required you to run a Maven command or create a project with &lt;a href="https://code.quarkus.io/"&gt;code.quarkus.io&lt;/a&gt;. Now you can create a new project right from a user interface in VS Code. This can be done through a new wizard that generates Maven-based Quarkus projects with the latest version of Quarkus.&lt;img class=" alignnone size-full wp-image-630597 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/navigate_thorugh_wizard_new-1024x308.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/navigate_thorugh_wizard_new.gif" alt="" width="1189" height="358" /&gt;&lt;/p&gt; &lt;p&gt;The wizard will ask you for the project’s groupId, artifactId, project version, package name, resource name, and target directory. It also lets you select Quarkus extensions to add to your new project. If you selected Quarkus extensions through the wizard before, the &amp;#8220;Last Used&amp;#8221; option lets you easily select all previously chosen extensions.&lt;img class=" alignnone size-full wp-image-630167 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option-1024x426.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option.png" alt="" width="1189" height="495" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option.png 1189w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option-300x125.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option-768x320.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/last_used_option-1024x426.png 1024w" sizes="(max-width: 1189px) 100vw, 1189px" /&gt;&lt;/p&gt; &lt;h3&gt;Snippet support&lt;/h3&gt; &lt;p&gt;The VS Code extension provides snippets to create new Quarkus resources and tests, which can help speed up your workflow. You can use these snippets by calling the &lt;code&gt;Insert Snippet&lt;/code&gt; VS Code command or by simply typing the snippet prefix in a Java file. Pressing tab will place the cursor at the next location of interest.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630187 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/using_a_snippet-1024x395.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/using_a_snippet.gif" alt="" width="1625" height="627" /&gt;&lt;/p&gt; &lt;h3&gt;Adding Quarkus extensions to a Quarkus project&lt;/h3&gt; &lt;p&gt;The VS Code extension provides a separate wizard for adding Quarkus extensions to the current project.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630197 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/add_extension_wizard-1024x434.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/add_extension_wizard.gif" alt="" width="1185" height="502" /&gt;&lt;/p&gt; &lt;p&gt;After selecting the desired Quarkus extension(s), the Maven command to add the extensions will run in VS Code’s integrated terminal.&lt;/p&gt; &lt;h3&gt;Debugging a Quarkus project&lt;/h3&gt; &lt;p&gt;Starting a debug session with the VS Code extension’s debug command automatically creates and adds a new VS Code task and debug configuration in the project folder. This step allows VS Code to automatically start the Quarkus application by running the &lt;code&gt;quarkus:dev&lt;/code&gt; command when you start a debug session. The debugger will attach to the application right after it starts. When closing the debug session, you are provided with options to terminate the Quarkus application or keep it running.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630217 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/debug_term1.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/debug_term1.png" alt="" width="931" height="217" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/debug_term1.png 931w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/debug_term1-300x70.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/debug_term1-768x179.png 768w" sizes="(max-width: 931px) 100vw, 931px" /&gt;&lt;/p&gt; &lt;h3&gt;Tree view for application.properties&lt;/h3&gt; &lt;p&gt;Upon opening the application.properties file, the VS Code explorer outline will provide you with a tree view containing all property keys and values. This feature is especially useful for large application.properties files because it groups properties by their namespace and profile.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-630227 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/tree_view_new.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/tree_view_new.png" alt="" width="391" height="308" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/tree_view_new.png 391w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/tree_view_new-300x236.png 300w" sizes="(max-width: 391px) 100vw, 391px" /&gt;&lt;/p&gt; &lt;h3&gt;Hover and documentation for application.properties&lt;/h3&gt; &lt;p&gt;The ability to hover over property keys makes it easy to view the property’s documentation. The documentation provides the property key’s value type, default value (if it exists), phase (whether the property applies at Quarkus runtime or build time), and the extension name.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630237 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc-1024x429.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc.png" alt="" width="1201" height="503" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc.png 1201w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc-300x126.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc-768x322.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/hovering_a_property_new_doc-1024x429.png 1024w" sizes="(max-width: 1201px) 100vw, 1201px" /&gt;&lt;/p&gt; &lt;h3&gt;Completion for application.properties&lt;/h3&gt; &lt;p&gt;As of now, there are more than 400 possible predefined Quarkus properties that could appear in an application.properties file. I challenge you to remember them all :). Because of the vast number of properties that could be configured, property key and value completion prove useful to anyone working with the application.properties file.&lt;/p&gt; &lt;p&gt;After opening the application.properties file, you can receive property key completion options as you type, or with the Ctrl+Space (Option+Space for macOS) keyboard shortcut. The list of completion options is in sync with the Quarkus extensions that are currently available to the project. That means, whenever Quarkus extensions are added or removed, the list of completion options will be updated to provide you with the relevant completion options.&lt;img class=" alignnone size-full wp-image-630907 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/08_key_completion-1024x437.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/08_key_completion.gif" alt="" width="1462" height="624" /&gt;&lt;/p&gt; &lt;p&gt;If the property key has a default value, it will be inserted automatically as a part of the completion.&lt;img class=" alignnone size-full wp-image-630917 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/09_default_value_completion-1024x437.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/09_default_value_completion.gif" alt="" width="1462" height="624" /&gt;&lt;/p&gt; &lt;p&gt;Completion is also available for enumerated type and boolean values.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630287 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/enum_bool_completion-1024x320.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/enum_bool_completion.gif" alt="" width="1078" height="337" /&gt;&lt;/p&gt; &lt;p&gt;There is also completion support for mapped properties. Pressing tab after editing the property will place the cursor at the next location.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630297 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/moving_the_cursor-1024x331.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/moving_the_cursor.gif" alt="" width="1229" height="397" /&gt;&lt;/p&gt; &lt;h3&gt;Validation for application.properties&lt;/h3&gt; &lt;p&gt;Last but not least, we have validation support for application.properties. We currently provide validation support for unknown properties, duplicate properties, and for missing equals signs.&lt;br /&gt; &lt;img class=" alignnone size-full wp-image-630317 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/validation_new.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/validation_new.png" alt="" width="982" height="354" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/validation_new.png 982w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/validation_new-300x108.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/validation_new-768x277.png 768w" sizes="(max-width: 982px) 100vw, 982px" /&gt;&lt;/p&gt; &lt;h2&gt;Next steps&lt;/h2&gt; &lt;p&gt;As you can see, the Quarkus extension for VS Code has great features to help provide a seamless developer experience and promote Quarkus project development within VS Code. However, this does not mean that the extension is perfect and bug-free; it is still being improved. We aspire to add new features (such as a CodeLens feature that would open REST endpoint URLs in a web browser) and improve existing features (such as completion, validation, snippets).&lt;/p&gt; &lt;p&gt;If you prefer IDEs such as Eclipse and IntelliJ IDEA, the good news is that Quarkus tooling for those IDEs are currently in progress. Because the application.properties features are provided via the &lt;a href="https://microsoft.github.io/language-server-protocol/"&gt;Language Server Protocol (LSP)&lt;/a&gt;, it is possible to provide the same features to other editors and IDEs.&lt;/p&gt; &lt;p&gt;If you have any issues or feature requests, please let us know by creating a GitHub issue &lt;a href="https://github.com/redhat-developer/vscode-quarkus/issues"&gt;here&lt;/a&gt;. We would be very happy to listen to any suggestions for improvement. If you would like to contribute to the project, the contributing guide is located in the GitHub repository &lt;a href="https://github.com/redhat-developer/vscode-quarkus/blob/master/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Thank you for reading!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#38;linkname=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fhow-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience%2F&amp;#038;title=How%20the%20new%20Quarkus%20extension%20for%20Visual%20Studio%20Code%20improves%20the%20development%20experience" data-a2a-url="https://developers.redhat.com/blog/2019/09/23/how-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience/" data-a2a-title="How the new Quarkus extension for Visual Studio Code improves the development experience"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/23/how-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience/"&gt;How the new Quarkus extension for Visual Studio Code improves the development experience&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/hqYLp3ki0lo" height="1" width="1" alt=""/&gt;</content><summary>Earlier this year, we were introduced to Quarkus, the next-generation, container-first framework for Java applications. As expected, such new frameworks and technologies make way for new developer tools focused on making the development experience even better. The recent Quarkus extension for Visual Studio Code release aims to do just that, by bringing features specific to Quarkus project developm...</summary><dc:creator>David Kwon</dc:creator><dc:date>2019-09-23T13:45:28Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/23/how-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience/</feedburner:origLink></entry><entry><title>Event-driven business automation powered by cloud-native Java</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/iWKIf6pM02c/" /><category term="devnation" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="kogito" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-event_driven_business_automation_powered_by_cloud_native_java</id><updated>2019-09-23T07:00:20Z</updated><published>2019-09-23T07:00:20Z</published><content type="html">&lt;p&gt;Kogito is a new &lt;a href="https://developers.redhat.com/developer-tools/java"&gt;Java&lt;/a&gt; toolkit, based on Drools and jBPM, that’s made to bring rules and processes to the &lt;a href="https://developers.redhat.com/courses/quarkus/getting-started/"&gt;Quarkus&lt;/a&gt; world. The &lt;a href="https://youtu.be/6lZ2d7ZDpFk"&gt;DevNation Live tech talk&lt;/a&gt; at the end of this article explains how Kogito can be used to build cloud-ready, event-driven business applications, and it includes a demo of implementing the business logic of a complex domain.&lt;/p&gt; &lt;p&gt;Kogito itself is defined as a cloud-native business automation toolkit that helps you to build intelligent applications. It&amp;#8217;s way more than just a business process or a single business rule—it’s a bunch of business rules, and it&amp;#8217;s based on battle-tested capabilities.&lt;/p&gt; &lt;p&gt;&lt;span id="more-628967"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Focus on the business domain&lt;/h3&gt; &lt;p&gt;One of the most important things in the Kogito ecosystem, or in the way you build with Kogito, is the focus on the business domain rather than the technology itself.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-628987 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-business-1024x516.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-business-1024x516.png" alt="Kogito business" width="640" height="323" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-business-1024x516.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-business-300x151.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-business-768x387.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;In the example use case, we have a startup travel agency, called Kogito Travel Agency, that wants to increase its online presence. In the example, we have a traveler, a visa officer, and a travel assistant, all of whom want to be informed as soon as they need to react to some action that is waiting for them. In terms of the overall architecture, we have two main services: the Kogito travel agency service and the Kogito visas. Those are microservices.&lt;/p&gt; &lt;p&gt;The backbone of the application is actually a business process that is exposed as a service. The process itself has several nodes that you need to traverse, which define the way the application is actually built up. Then, we can use “process composition” to divide the actual business process into multiple steps or smaller pieces.&lt;/p&gt; &lt;h3&gt;Message events&lt;/h3&gt; &lt;p&gt;The other service, which is responsible for visa applications, is only initiated with the message event, and that message event is connected to a Kafka topic. As a message arises for the Kafka topic, it will create a new instance of that process.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-628997 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-process-1024x555.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-process-1024x555.png" alt="Kogito event process" width="640" height="347" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-process-1024x555.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-process-300x162.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-process-768x416.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;The idea is to start enhancing the process even more, so those events can produce other events that are of business relevance.&lt;/p&gt; &lt;p&gt;For the last step, the travel requests are completed. But, since everything is domain driven and business relevant, we can now take advantage of Grafana and the metrics that we expose. As you can see, it&amp;#8217;s not just that we have the basic information about travel requests—how many are open, canceled, or completed, etc. We also have indirect information about what services have been invoked or what rules have been applied.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-629007 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-metrics-1024x476.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-metrics-1024x476.png" alt="Kogito metrics" width="640" height="298" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-metrics-1024x476.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-metrics-300x139.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/kogito-metrics-768x357.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;So, now we can start deriving not only the business-related information but the domain-specific information as well.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Watch the complete &lt;a href="https://developers.redhat.com/devnation/"&gt;DevNation Live tech talk&lt;/a&gt; below. DevNation Live tech talks are hosted by the Red Hat technologists who create our products. These sessions include real solutions and code and sample projects to help you get started. In this talk, presented by Red Hat’s Maciej Swiderski, Principal Software Engineer, and &lt;a href="https://developers.redhat.com/node/204405/"&gt;Burr Sutter&lt;/a&gt;, Chief Developer Evangelist, you’ll learn about event-driven business automation using &lt;a href="https://developers.redhat.com/blog/2019/08/29/kogito-for-quarkus-intelligent-applications/"&gt;Kogito&lt;/a&gt;, Quarkus, and more.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;iframe src="https://www.youtube.com/embed/6lZ2d7ZDpFk" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;Get more details in the demo: &lt;a href="https://github.com/mswiderski/kogito-travel-agency-tutorial"&gt;https://github.com/mswiderski/kogito-travel-agency-tutorial&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;Join us at an upcoming &lt;a href="https://developers.redhat.com/events/"&gt;developer event&lt;/a&gt;, and see our collection of&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; past DevNation Live tech talks&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fdevnation-live-event-driven-business-automation-powered-by-cloud-native-java%2F&amp;#38;linkname=Event-driven%20business%20automation%20powered%20by%20cloud-native%20Java" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fdevnation-live-event-driven-business-automation-powered-by-cloud-native-java%2F&amp;#38;linkname=Event-driven%20business%20automation%20powered%20by%20cloud-native%20Java" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fdevnation-live-event-driven-business-automation-powered-by-cloud-native-java%2F&amp;#38;linkname=Event-driven%20business%20automation%20powered%20by%20cloud-native%20Java" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fdevnation-live-event-driven-business-automation-powered-by-cloud-native-java%2F&amp;#38;linkname=Event-driven%20business%20automation%20powered%20by%20cloud-native%20Java" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fdevnation-live-event-driven-business-automation-powered-by-cloud-native-java%2F&amp;#38;linkname=Event-driven%20business%20automation%20powered%20by%20cloud-native%20Java" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fdevnation-live-event-driven-business-automation-powered-by-cloud-native-java%2F&amp;#38;linkname=Event-driven%20business%20automation%20powered%20by%20cloud-native%20Java" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fdevnation-live-event-driven-business-automation-powered-by-cloud-native-java%2F&amp;#38;linkname=Event-driven%20business%20automation%20powered%20by%20cloud-native%20Java" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F23%2Fdevnation-live-event-driven-business-automation-powered-by-cloud-native-java%2F&amp;#038;title=Event-driven%20business%20automation%20powered%20by%20cloud-native%20Java" data-a2a-url="https://developers.redhat.com/blog/2019/09/23/devnation-live-event-driven-business-automation-powered-by-cloud-native-java/" data-a2a-title="Event-driven business automation powered by cloud-native Java"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/23/devnation-live-event-driven-business-automation-powered-by-cloud-native-java/"&gt;Event-driven business automation powered by cloud-native Java&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/iWKIf6pM02c" height="1" width="1" alt=""/&gt;</content><summary>Kogito is a new Java toolkit, based on Drools and jBPM, that’s made to bring rules and processes to the Quarkus world. The DevNation Live tech talk at the end of this article explains how Kogito can be used to build cloud-ready, event-driven business applications, and it includes a demo of implementing the business logic of a complex domain. Kogito itself is defined as a cloud-native business auto...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2019-09-23T07:00:20Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/23/devnation-live-event-driven-business-automation-powered-by-cloud-native-java/</feedburner:origLink></entry><entry><title>Using Red Hat OpenShift image streams with Kubernetes deployments</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/JV3A5LHHnvY/" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="OpenShift4" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="Universal Base Images (UBI)" scheme="searchisko:content:tags" /><author><name>Fernando Lozano</name></author><id>searchisko:content:id:jbossorg_blog-using_red_hat_openshift_image_streams_with_kubernetes_deployments</id><updated>2019-09-20T07:00:12Z</updated><published>2019-09-20T07:00:12Z</published><content type="html">&lt;p&gt;This article demonstrates an application update scenario which leverages &lt;a href="http://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; image streams together with standard &lt;a href="http://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; native resources. It also shows how image streams automatically redeploy application pods after an update to their container image.&lt;/p&gt; &lt;p&gt;Best of all, Kubernetes resources enhanced with OpenShift image streams are still compatible with standard Kubernetes clusters. This fact enables the use of the same resource definitions to support multiple Kubernetes distributions, and at the same time take advantage of features unique to OpenShift.&lt;/p&gt; &lt;p&gt;At the end of this article, we present a few considerations around using image IDs and image name tags to manage your ability to roll back to previous versions of an application.&lt;span id="more-628297"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Benefits of image streams&lt;/h2&gt; &lt;p&gt;One of the main features that OpenShift provides over upstream Kubernetes is image stream resources. Using image streams brings many benefits, including:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Portability&lt;/strong&gt;: Image streams make your pods independent of registry servers. You can copy container images from a public registry on the internet into a private registry inside your organization. There is no need to change image references or container engine configurations on your cluster nodes.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt;: Image stream names and image stream tags can follow whatever standards fit your organization. Container image names and tags follow different conventions and have different meanings depending on the vendor.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Reproducibility&lt;/strong&gt;: Image streams make it easy to reference immutable container images by their image IDs. Image names and tags are mutable and could point to different images at different times. Image streams ensure that pods use a known, fixed image ID.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Stability&lt;/strong&gt;: Image streams ensure that all replica pods use the same immutable image. Pods from the same replica set, that each reference images using names and tags, may end up running different container images. Users might get different results depending on which pod a service or an ingress sends each request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Reversibility&lt;/strong&gt;: If an image name and tag changes and the new container image has issues, there is no reliable way to roll back to the last known good container image. Because image streams keep a history (stream) of image IDs, generations, and time stamps, you can identify and roll back to an older, known working image if needed.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Automation&lt;/strong&gt;: An image stream generates image change events that trigger the redeployment of pods from workload resources that reference the image stream. This feature allows for simple continuous deployment (CD) scenarios without requiring Jenkins and other complex tools.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;OpenShift image stream basics&lt;/h2&gt; &lt;p&gt;Image streams are named references to container images. The OpenShift extension resources reference container images indirectly, using image streams. Kubernetes standard resources reference container images directly by their registry, name, and tag.&lt;/p&gt; &lt;p&gt;Kubernetes users can avoid stability, reproducibility, and reversibility issues by properly managing image tags. By the end of the demonstration, you should have an understanding of how these issues may affect Kubernetes deployments, and some strategies to prevent these issue. This task can be done, regardless, but it is easier using OpenShift image streams.&lt;/p&gt; &lt;p&gt;Image streams are part of the OpenShift extension APIs. Other OpenShift extension resources, such as build configurations and deployment configurations, provide native support for image streams. OpenShift tooling, such as the &lt;code&gt;oc&lt;/code&gt; command, offers easy-to-use commands to manage image stream resources, as well as other extension API resources.&lt;/p&gt; &lt;p&gt;OpenShift adds its extension APIs using standard Kubernetes extension mechanisms, such as custom resource definitions (CRDs) and admission plugins. This feature allows OpenShift to support using image streams together with standard Kubernetes workload API resources, such as Deployments, StatefulSets, and Jobs.&lt;/p&gt; &lt;h2&gt;Demonstration scenario&lt;/h2&gt; &lt;p&gt;Maybe you are not ready to switch fully to OpenShift extensions. Maybe you need to keep supporting other Kubernetes distributions. Don’t worry, you can enable image stream support for standard Kubernetes resources in a non-intrusive way. These OpenShift-enhanced resources can be used with standard Kubernetes distributions that will silently ignore the OpenShift extensions since the necessary modifications are made to these resources using annotations.&lt;/p&gt; &lt;p&gt;Kubernetes annotations allow adding non-identifying metadata to any Kubernetes resource. Any data stored as an annotation does not change the schema nor the semantics of a Kubernetes resource.&lt;/p&gt; &lt;p&gt;The fact that OpenShift uses annotations means that the same YAML file works unchanged with any standard Kubernetes cluster while taking advantage of image streams on an OpenShift cluster. When you use that YAML file with OpenShift, it processes the annotations. When you use the same YAML file with a Kubernetes distribution without image Streams, it simply works as if the annotations were not there.&lt;/p&gt; &lt;h3&gt;Choosing test container images&lt;/h3&gt; &lt;p&gt;To emulate an application update scenario, we need two versions of a container image. One of them is the old image, and the other is the new image. To keep things simple and be compliant with the Red Hat Enterprise Linux (RHEL) EULA, the demonstration uses the base Universal Base Image (UBI).&lt;/p&gt; &lt;p&gt;Start by finding the currently available tags for Red Hat&amp;#8217;s UBI base image. You can use the &lt;code&gt;skopeo inspect&lt;/code&gt; command and, if you wish, filter the output using the &lt;code&gt;jq&lt;/code&gt; JSON parser:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;skopeo inspect docker://registry.access.redhat.com/ubi8/ubi \ &lt;/b&gt;&lt;b&gt;| jq -r '.RepoTags' -&lt;/b&gt; [   "8.0",   "8.0-122",   "8.0-126",   "8.0-129",   "8.0-154",   "latest" ]&lt;/pre&gt; &lt;p&gt;Smaller numbers denote older builds of the UBI base image, and higher numbers are more recent builds. For the following demonstration, the tags &lt;code&gt;8.0-122&lt;/code&gt; and &lt;code&gt;8.0-154&lt;/code&gt; are used.&lt;/p&gt; &lt;p&gt;This demonstration illustrates the method in which Red Hat manages image tags. Red Hat never overrides tags named as &lt;em&gt;major-minor-build&lt;/em&gt;. Other tags, such as &lt;em&gt;major-minor&lt;/em&gt; (e.g., &lt;code&gt;8.0&lt;/code&gt; and &lt;code&gt;latest&lt;/code&gt;) are floating tags. Floating tags refer to a tag that point to different container images by ID over time.&lt;/p&gt; &lt;h3&gt;Deploying basic Kubernetes&lt;/h3&gt; &lt;p&gt;To make sure you control container image updates during this demonstration, copy the old container image into a public registry. For example, &lt;a href="https://quay.io/" target="_blank" rel="noopener noreferrer"&gt;Quay.io&lt;/a&gt; is used in this demonstration. You can register at Quay.io for free and publish your container images there for everyone to consume.&lt;/p&gt; &lt;p&gt;Use the Quay.io web interface to create a public repository on your Quay.io account. Name that repository &lt;code&gt;ubi&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Log in to Quay.io using &lt;code&gt;podman&lt;/code&gt; and copy your old UBI image there using &lt;code&gt;skopeo&lt;/code&gt;. Replace &lt;code&gt;flozanorht&lt;/code&gt; in the following commands with your Quay.io account, and tag the destination image as &lt;code&gt;8&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;podman login -u &lt;/b&gt;&lt;b&gt;&lt;i&gt;flozanorht&lt;/i&gt;&lt;/b&gt;&lt;b&gt; quay.io&lt;/b&gt; Password: Login Succeeded! $ &lt;b&gt;skopeo copy docker://registry.access.redhat.com/ubi8/ubi:8.0-122 \&lt;/b&gt; &lt;b&gt;docker://quay.io/&lt;/b&gt;&lt;b&gt;&lt;i&gt;flozanorht&lt;/i&gt;&lt;/b&gt;&lt;b&gt;/ubi:8&lt;/b&gt; ... Writing manifest to image destination Storing signatures&lt;/pre&gt; &lt;p&gt;The following listing shows a Kubernetes Deployment resource that references the old image. This is a bare deployment on purpose and does not include important features that are typically included on runtime resources, such as health probes and resource limits, in order to focus on adding support for image streams.&lt;/p&gt; &lt;p&gt;Remember to change the &lt;code&gt;image&lt;/code&gt; attribute to refer to your Quay.io account:&lt;/p&gt; &lt;pre&gt;apiVersion: apps/v1 kind: Deployment metadata:   name: myapp   labels:     app: myapp spec:   selector:     matchLabels:       app: myapp   replicas: 1   template:     metadata:       labels:         app: myapp     spec:       containers:         - name: myapp           image: quay.io/&lt;i&gt;flozanorht&lt;/i&gt;/ubi:8           command:             - "/bin/bash"             - "-c"             - "while true; do ls /root/buildinfo/; sleep 30; done"&lt;/pre&gt; &lt;p&gt;This deployment creates pods that loop forever, logging the contents of &lt;code&gt;/root/buildinfo&lt;/code&gt;. Red Hat updates a file name under this folder with the build number of each new UBI base image. We will use this log to verify that running pods are actually using the appropriate image.&lt;/p&gt; &lt;h3&gt;Deploying on OpenShift the Kubernetes way&lt;/h3&gt; &lt;p&gt;Log into your OpenShift cluster, which can be either a recent release of OpenShift 3.x or a more recent release of OpenShift 4.x, and either be hosted at a cloud provider or on your local laptop using &lt;a href="https://www.okd.io/minishift/" target="_blank" rel="noopener noreferrer"&gt;Minishift&lt;/a&gt; or &lt;a href="https://github.com/code-ready/crc" target="_blank" rel="noopener noreferrer"&gt;CodeReady Containers&lt;/a&gt;. This demonstration should work the same way for each of these options.&lt;/p&gt; &lt;p&gt;I am using the OpenShift &lt;code&gt;oc&lt;/code&gt; command-line tool, but the following steps would work the same way using the &lt;code&gt;kubectl&lt;/code&gt; command and a standard Kubernetes cluster. I will only use features exclusive to OpenShift when I create an image stream.&lt;/p&gt; &lt;p&gt;Create a new project and create the Kubernetes deployment resource from the YAML file referenced previously:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc create -f myapp.yaml&lt;/b&gt; deployment.apps/myapp created&lt;/pre&gt; &lt;p&gt;After a few moments, a running pod with one container will be ready:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc get deployment&lt;/b&gt; NAME    READY UP-TO-DATE   AVAILABLE AGE myapp   1/1 1            1 6s $ &lt;b&gt;oc get pod&lt;/b&gt; NAME                    READY STATUS RESTARTS   AGE myapp-75c97cd8f-m5pjk   1/1     Running   0 10s&lt;/pre&gt; &lt;p&gt;Check the pod logs, replacing the name of the pod from the above command&amp;#8217;s output, to see the build number of its container image. It should match the tag you picked up as your old image:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc logs myapp-&lt;/b&gt;&lt;b&gt;75c97cd8f-m5pjk&lt;/b&gt;&lt;b&gt; | tail -n1&lt;/b&gt; Dockerfile-ubi8-8.0-122&lt;/pre&gt; &lt;p&gt;Verify that the running pod references the old container image by its name and tag:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc get pod myapp-&lt;/b&gt;&lt;b&gt;75c97cd8f-m5pjk&lt;/b&gt;&lt;b&gt; -o &lt;/b&gt;&lt;b&gt;jsonpath='{.spec.containers[0].image}{"\n"}'&lt;/b&gt; quay.io/flozanorht/ubi:8&lt;/pre&gt; &lt;h3&gt;Creating an image stream&lt;/h3&gt; &lt;p&gt;So far, we could be using any Kubernetes distribution and its associated &lt;code&gt;kubectl&lt;/code&gt; command-line tool. Now we switch to the OpenShift-specific features.&lt;/p&gt; &lt;p&gt;Create an image stream that points to your old image on Quay.io. Also included is an image stream tag resource which points to the current image ID of the old image name and the tag it references.&lt;/p&gt; &lt;p&gt;Remember to change the image name on the following command to refer to your Quay.io account:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc import-image ubi --confirm --all --from quay.io/&lt;/b&gt;&lt;b&gt;&lt;i&gt;flozanorht&lt;/i&gt;&lt;/b&gt;&lt;b&gt;/ubi&lt;/b&gt; imagestream.image.openshift.io/ubi imported ... $ &lt;b&gt;oc get istag&lt;/b&gt; NAME    IMAGE REF                                   UPDATED ubi:8   quay.io/flozanorht/ubi@sha256:a17a...e8e1   6 seconds ago&lt;/pre&gt; &lt;p&gt;Record the image ID as it will be referenced later: It is the string of random hexadecimal numbers after the &lt;code&gt;sha256&lt;/code&gt; text. This string is the real ID of an immutable container image. It will be compared with the ID you get after the container image is updated.&lt;/p&gt; &lt;h3&gt;Adding OpenShift annotations to a Kubernetes deployment&lt;/h3&gt; &lt;p&gt;Now starts the real fun. The &lt;code&gt;oc&lt;/code&gt; tool provides the handy command &lt;code&gt;oc set triggers&lt;/code&gt; that adds an image change trigger annotation to Kubernetes resources via the workloads API. This command takes the name of the image stream and the tag:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc set triggers deployment/myapp --from-image ubi:8 -c myapp&lt;/b&gt; deployment.extensions/myapp triggers updated&lt;/pre&gt; &lt;p&gt;List the deployment resource in raw YAML format to see the annotation that does the &amp;#8220;magic:&amp;#8221;&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc get deployment myapp -o yaml | grep -A2 annotations:&lt;/b&gt;   annotations:     deployment.kubernetes.io/revision: "2"    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"ubi:8"},"fieldPath":"spec.template.spec.containers[?(@.name==\"myapp\")].image"}]'&lt;/pre&gt; &lt;p&gt;This annotation uses a &lt;a href="https://github.com/json-path/JsonPath" target="_blank" rel="noopener noreferrer"&gt;JSONpath&lt;/a&gt; expression to update the image reference inside the Kubernetes resource. If you want to use image streams with other kinds of Kubernetes resources, such as cron jobs, you need to modify the JSONpath expression appropriately. If you use the &lt;code&gt;oc set triggers&lt;/code&gt; command, OpenShift provides the expression for you.&lt;/p&gt; &lt;p&gt;Adding this annotation fires an image change event to make sure the currently running pods use the container ID from the image stream. After a few moments, the new pod is ready and running. Check that it now refers to the same image ID from the image stream:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc get pod&lt;/b&gt; NAME                     READY STATUS RESTARTS   AGE myapp-58cc598448-qr2xn   1/1 Running 0     10s $ &lt;b&gt;oc get pod myapp-58cc598448-qr2xn -o &lt;/b&gt;&lt;b&gt;jsonpath='{.spec.containers[0].image}{"\n"}'&lt;/b&gt; quay.io/flozanorht/ubi@sha256:a17a..e8e1&lt;/pre&gt; &lt;h2&gt;Automatic redeployment on image updates&lt;/h2&gt; &lt;p&gt;Copy your &amp;#8220;new&amp;#8221; container image to Quay.io, overriding the same name and tag that referred to the old image:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;skopeo copy docker://registry.access.redhat.com/ubi8/ubi:8.0-154 \&lt;/b&gt; &lt;b&gt;docker://quay.io/&lt;/b&gt;&lt;b&gt;&lt;i&gt;flozanorht&lt;/i&gt;&lt;/b&gt;&lt;b&gt;/ubi:8&lt;/b&gt; ...&lt;/pre&gt; &lt;p&gt;Verify that the pod is still using the old container image ID:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc get pod myapp-58cc598448-qr2xn -o &lt;/b&gt;&lt;b&gt;jsonpath='{.spec.containers[0].image}{"\n"}'&lt;/b&gt; quay.io/flozanorht/ubi@sha256:a17a..e8e1&lt;/pre&gt; &lt;p&gt;Update your image stream to point to the new image and verify that the image stream tag now refers to a new image ID:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc import-image ubi --confirm --all&lt;/b&gt; imagestream.image.openshift.io/mysql imported ... $ &lt;b&gt;oc get istag&lt;/b&gt; NAME    MAGE REF                                   UPDATED ubi:8   quay.io/flozanorht/ubi@sha256:985e..286e   34 seconds ago&lt;/pre&gt; &lt;p&gt;Updating the image stream triggers a redeployment. After a few moments, a new pod will be created referencing the new image ID:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc get pod&lt;/b&gt; NAME                     READY STATUS RESTARTS   AGE myapp-6b6c9c9787-t8kmd   1/1 Running 0     24s $ &lt;b&gt;oc get pod myapp-6b6c9c9787-t8kmd -o &lt;/b&gt;&lt;b&gt;jsonpath='{.spec.containers[0].image}{"\n"}'&lt;/b&gt; quay.io/flozanorht/ubi@sha256:985e..286e&lt;/pre&gt; &lt;p&gt;Finally, the new pod&amp;#8217;s logs show the new container image&amp;#8217;s build number:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc logs myapp-6b6c9c9787-t8kmd | tail -n1&lt;/b&gt; Dockerfile-ubi8-8.0-154&lt;/pre&gt; &lt;p&gt;Events on the Kubernetes deployment shows both redeployments as scale up and down events of its replica set:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc describe deployment myapp&lt;/b&gt; ... Events:  Type    Reason             Age   From                 Message  ----    ------             ----  ----                 -------   Normal  ScalingReplicaSet  18m    deployment-controller  Scaled up replica set myapp-75c97cd8f to 1   Normal  ScalingReplicaSet  13m    deployment-controller  Scaled up replica set myapp-58cc598448 to 1   Normal  ScalingReplicaSet  12m    deployment-controller  Scaled down replica set myapp-75c97cd8f to 0  Normal  ScalingReplicaSet  2m53s deployment-controller  Scaled up replica set myapp-6b6c9c9787 to 1  Normal  ScalingReplicaSet  2m41s deployment-controller  Scaled down replica set myapp-58cc598448 to 0&lt;/pre&gt; &lt;p&gt;Remember you got two redeployments: the first when adding the annotation and the second when updating the image stream. You may wonder if you had created the deployment resource already including the annotation, instead of adding it later, would this prevent one redeployment? The answer is no.&lt;/p&gt; &lt;p&gt;OpenShift triggers the image change event after the deployment resource is created. By that time, the Kubernetes deployment already created a replica set and a pod. The only change would be that no pods from the first deployment would ever be seen. They would be replaced by new pods before reaching the running state.&lt;/p&gt; &lt;p&gt;You can describe the image stream to see its history (or stream) of image IDs, in reverse chronological order:&lt;/p&gt; &lt;pre&gt;$ &lt;b&gt;oc describe is ubi | grep -A5 tagged&lt;/b&gt;   tagged from quay.io/flozanorht/ubi:8   * quay.io/flozanorht/ubi@sha256:985e..286e       10 minutes ago     quay.io/flozanorht/ubi@sha256:a17a..e8e1       10 minutes ago&lt;/pre&gt; &lt;p&gt;You can force your image stream to use an older image ID, thus safely rolling back to a previous known-good container image.&lt;/p&gt; &lt;h2&gt;Much more to learn about image streams&lt;/h2&gt; &lt;p&gt;This demonstration only touched upon the basics of image streams in OpenShift. Other nice features of image streams include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Image streams with multiple tags&lt;/strong&gt;: Each tag can refer to a different registry, image names, and tags.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Scheduled updates to image streams&lt;/strong&gt;: More built-in automation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Image streams that reference other image streams&lt;/strong&gt;: Multiple levels of indirection.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Image streams and pull secrets in shared projects&lt;/strong&gt;: Make it easier for your team to use your enterprise registry.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Deploy code changes instantly&lt;/strong&gt;: Push OpenShift builds to an image stream.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Alternatives to image streams for managing image IDs&lt;/h2&gt; &lt;p&gt;The stability, reproducibility, and reversibility issues hinted at in the introduction are consequences of using floating container image tags. If your organization (or your vendor) manages their tags by providing a new non-floating tag for each new image, as Red Hat provides for its container images, you can rely on these tags to avoid multiple pods of your application running different container images.&lt;/p&gt; &lt;p&gt;Sure, it&amp;#8217;s more convenient for a developer to deploy the &lt;code&gt;ubi8/ubi:8.0&lt;/code&gt; image than the &lt;code&gt;ubi8/ubi:8.0-122&lt;/code&gt; image. Standard Kubernetes provides no automated mechanism to take a floating tag and record the image ID associated with it at different points in time. OpenShift makes using floating tags safe, thanks to image streams.&lt;/p&gt; &lt;p&gt;If you create your Kubernetes deployments to reference non-floating tags, you need to update the deployment resource when you update your application. You could implement these updates as part of a CI/CD pipeline using a tool like &lt;a href="https://jenkins.io" target="_blank" rel="noopener noreferrer"&gt;Jenkins&lt;/a&gt; or &lt;a href="https://tekton.dev" target="_blank" rel="noopener noreferrer"&gt;Tekton&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Operator-based software, such as &lt;a href="https://developers.redhat.com/products/openshift"&gt;Red Hat OpenShift Container Platform 4&lt;/a&gt; cluster operators, configure their Deployments to reference image IDs and do not rely on any tag. New releases rely on the &lt;a href="https://docs.openshift.com/container-platform/4.1/applications/operators/olm-understanding-olm.html" target="_blank" rel="noopener noreferrer"&gt;Operator Lifecycle Manager&lt;/a&gt; to update its deployments.&lt;/p&gt; &lt;p&gt;Note that using image IDs alone may not excuse you from managing non-floating tags. Your strategy depends on your registry server software. The OpenShift internal registry retains a configurable number of old image IDs for an image name. Older images will be &lt;a href="https://docs.openshift.com/container-platform/3.11/admin_guide/pruning_resources.html" target="_blank" rel="noopener noreferrer"&gt;pruned&lt;/a&gt; and it is not possible to roll back to them.&lt;/p&gt; &lt;p&gt;Red Hat Quay follows a different approach: All images whose IDs are not referenced by any tag are pruned by a background task. Registry servers that follow this approach require that you maintain non-floating tags to prevent image pruning.&lt;/p&gt; &lt;h3&gt;Learn more&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://docs.openshift.com/container-platform/3.11/dev_guide/managing_images.html#using-is-with-k8s" target="_blank" rel="noopener noreferrer"&gt;Using Image Streams with Kubernetes Resources&lt;/a&gt; from Red Hat OpenShift Container Platform 3.11 product documentation, but applies equally well to Red Hat OpenShift Container Platform 4.x.&lt;/li&gt; &lt;li&gt;&lt;a href="https://docs.openshift.com/container-platform/3.11/dev_guide/managing_images.html" target="_blank" rel="noopener noreferrer"&gt;Managing Images&lt;/a&gt; from Red Hat OpenShift Container Platform 3.11 product documentation, but most of it applies equally well to Red Hat OpenShift Container Platform 4.x.&lt;/li&gt; &lt;li&gt;&lt;a href="https://blog.openshift.com/image-streams-faq/" target="_blank" rel="noopener noreferrer"&gt;How to Simplify Container Image Management in Kubernetes with OpenShift Image Streams&lt;/a&gt;&lt;/li&gt; &lt;li&gt;To try this demonstration using your laptop, get either Minisift for OpenShift 3.x, as part of the &lt;a href="https://developers.redhat.com/products/cdk/overview"&gt;Container Development Kit&lt;/a&gt;, or &lt;a href="https://cloud.redhat.com/openshift/install/crc/installer-provisioned"&gt;CodeReady Containers&lt;/a&gt; for OpenShift 4.x.&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.okd.io/"&gt;The OKD project&lt;/a&gt; is the upstream for Red Hat OpenShift Container Platform 3.x.&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/openshift/cluster-openshift-apiserver-operator" target="_blank" rel="noopener noreferrer"&gt;The openshift api server operator&lt;/a&gt; at GitHub is one of the many projects that provide Kubernetes extension APIs for Red Hat OpenShift Container Platform 4.x.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;em&gt;Thanks to Adan Kaplan, Andrew Block, Ben Browning, and Raffaele Spazzoli for their reviews and comments on drafts of this article.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F20%2Fusing-red-hat-openshift-image-streams-with-kubernetes-deployments%2F&amp;#38;linkname=Using%20Red%20Hat%20OpenShift%20image%20streams%20with%20Kubernetes%20deployments" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F20%2Fusing-red-hat-openshift-image-streams-with-kubernetes-deployments%2F&amp;#38;linkname=Using%20Red%20Hat%20OpenShift%20image%20streams%20with%20Kubernetes%20deployments" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F20%2Fusing-red-hat-openshift-image-streams-with-kubernetes-deployments%2F&amp;#38;linkname=Using%20Red%20Hat%20OpenShift%20image%20streams%20with%20Kubernetes%20deployments" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F20%2Fusing-red-hat-openshift-image-streams-with-kubernetes-deployments%2F&amp;#38;linkname=Using%20Red%20Hat%20OpenShift%20image%20streams%20with%20Kubernetes%20deployments" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F20%2Fusing-red-hat-openshift-image-streams-with-kubernetes-deployments%2F&amp;#38;linkname=Using%20Red%20Hat%20OpenShift%20image%20streams%20with%20Kubernetes%20deployments" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F20%2Fusing-red-hat-openshift-image-streams-with-kubernetes-deployments%2F&amp;#38;linkname=Using%20Red%20Hat%20OpenShift%20image%20streams%20with%20Kubernetes%20deployments" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F20%2Fusing-red-hat-openshift-image-streams-with-kubernetes-deployments%2F&amp;#38;linkname=Using%20Red%20Hat%20OpenShift%20image%20streams%20with%20Kubernetes%20deployments" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F20%2Fusing-red-hat-openshift-image-streams-with-kubernetes-deployments%2F&amp;#038;title=Using%20Red%20Hat%20OpenShift%20image%20streams%20with%20Kubernetes%20deployments" data-a2a-url="https://developers.redhat.com/blog/2019/09/20/using-red-hat-openshift-image-streams-with-kubernetes-deployments/" data-a2a-title="Using Red Hat OpenShift image streams with Kubernetes deployments"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/20/using-red-hat-openshift-image-streams-with-kubernetes-deployments/"&gt;Using Red Hat OpenShift image streams with Kubernetes deployments&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/JV3A5LHHnvY" height="1" width="1" alt=""/&gt;</content><summary>This article demonstrates an application update scenario which leverages Red Hat OpenShift image streams together with standard Kubernetes native resources. It also shows how image streams automatically redeploy application pods after an update to their container image. Best of all, Kubernetes resources enhanced with OpenShift image streams are still compatible with standard Kubernetes clusters. T...</summary><dc:creator>Fernando Lozano</dc:creator><dc:date>2019-09-20T07:00:12Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/20/using-red-hat-openshift-image-streams-with-kubernetes-deployments/</feedburner:origLink></entry><entry><title>DevNation Live Bengaluru: Java microservices and how to become cloud-native</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uRs1yIrOIyE/" /><category term="cloud" scheme="searchisko:content:tags" /><category term="devnation" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><author><name>Editorial Team</name></author><id>searchisko:content:id:jbossorg_blog-devnation_live_bengaluru_java_microservices_and_how_to_become_cloud_native</id><updated>2019-09-19T07:00:29Z</updated><published>2019-09-19T07:00:29Z</published><content type="html">&lt;p&gt;Our first &lt;a href="https://developers.redhat.com/devnationlive-india/"&gt;DevNation Live regional event was held in Bengaluru, India&lt;/a&gt; in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists.&lt;/p&gt; &lt;p&gt;Many of us are on a journey from traditional monolithic applications to a more distributed cloud-native &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt; architecture. In this session, &lt;a href="https://developers.redhat.com/blog/author/burrsutter/"&gt;Burr Sutter&lt;/a&gt; discusses the key microservices architecture principles and explains how and why to evolve to this approach. You&amp;#8217;ll learn how to become a new cloud-native developer and architect.&lt;span id="more-622047"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Watch the complete presentation:&lt;br /&gt; &lt;iframe src="https://www.youtube.com/embed/VSofy6cssbo" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Join us at an upcoming&lt;/span&gt;&lt;a href="https://developers.redhat.com/events/"&gt; &lt;span style="font-weight: 400;"&gt;developer event&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, and see our collection of&lt;/span&gt;&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; &lt;span style="font-weight: 400;"&gt;past DevNation Live tech talks&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F19%2Fdevnation-live-bengaluru-java-microservices-and-how-to-become-cloud-native%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Java%20microservices%20and%20how%20to%20become%20cloud-native" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F19%2Fdevnation-live-bengaluru-java-microservices-and-how-to-become-cloud-native%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Java%20microservices%20and%20how%20to%20become%20cloud-native" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F19%2Fdevnation-live-bengaluru-java-microservices-and-how-to-become-cloud-native%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Java%20microservices%20and%20how%20to%20become%20cloud-native" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F19%2Fdevnation-live-bengaluru-java-microservices-and-how-to-become-cloud-native%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Java%20microservices%20and%20how%20to%20become%20cloud-native" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F19%2Fdevnation-live-bengaluru-java-microservices-and-how-to-become-cloud-native%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Java%20microservices%20and%20how%20to%20become%20cloud-native" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F19%2Fdevnation-live-bengaluru-java-microservices-and-how-to-become-cloud-native%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Java%20microservices%20and%20how%20to%20become%20cloud-native" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F19%2Fdevnation-live-bengaluru-java-microservices-and-how-to-become-cloud-native%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Java%20microservices%20and%20how%20to%20become%20cloud-native" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F09%2F19%2Fdevnation-live-bengaluru-java-microservices-and-how-to-become-cloud-native%2F&amp;#038;title=DevNation%20Live%20Bengaluru%3A%20Java%20microservices%20and%20how%20to%20become%20cloud-native" data-a2a-url="https://developers.redhat.com/blog/2019/09/19/devnation-live-bengaluru-java-microservices-and-how-to-become-cloud-native/" data-a2a-title="DevNation Live Bengaluru: Java microservices and how to become cloud-native"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/09/19/devnation-live-bengaluru-java-microservices-and-how-to-become-cloud-native/"&gt;DevNation Live Bengaluru: Java microservices and how to become cloud-native&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uRs1yIrOIyE" height="1" width="1" alt=""/&gt;</content><summary>Our first DevNation Live regional event was held in Bengaluru, India in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists. Many of us are on a journey from traditional monolithic applications to a more distributed cloud-native microservices architecture. In this session, Burr Sutter discusses the key microservices architectu...</summary><dc:creator>Editorial Team</dc:creator><dc:date>2019-09-19T07:00:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/09/19/devnation-live-bengaluru-java-microservices-and-how-to-become-cloud-native/</feedburner:origLink></entry></feed>
